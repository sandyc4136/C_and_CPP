#include<iostream>
using namespace std;

class Shape{
protected:
	float area;
public:
	Shape( void ){
		this->area = 0;
	}
	void printRecord( void ){
		cout << "Area	:	" << this->area << endl;
	}
};
class Rectangle : public Shape {
private:
	float length;
	float breadth;
public:
	Rectangle( void ){
		this->length = 0;
		this->breadth = 0;
	}
	void acceptRecord( void ){
		cout << "Length	:	";
		cin >> this->length;
		cout << "Breadth	:	";
		cin >> this->breadth;
	}
	void calculateArea( ){
		this->area = this->length * this->breadth;
	}
};
class Circle : public Shape{
private:
	float radius;
public:
	Circle( void ){
		this->radius = 0;
	}
	void acceptRecord( void ){
		cout << "Radius	:	";
		cin >> this->radius;
	}
	void calculateArea( ){
		this->area = 3.14 * this->radius * this->radius;
	}
};
int menu_list( void ){
	int choice;
	cout << "0.Exit" << endl;
	cout << "1.Rectangle" << endl;
	cout << "2.Circle" << endl;
	cout << "Enter choice	:";
	cin >> choice;
	return choice;
}
int main( void ){
	int choice;
	while( ( choice = ::menu_list( ) ) != 0 ){
		Rectangle *rect = nullptr;
		Circle *c = nullptr;
		switch( choice ){
		case 1:
			rect = new Rectangle( );
			rect->acceptRecord( );
			rect->calculateArea( );
			rect->printRecord( );
			delete rect;
			break;
		case 2:
			c = new Circle( );
			c->acceptRecord( );
			c->calculateArea( );
			c->printRecord( );
			delete c;
			break;
		}
	}
	return 0;
}
int main1( void ){
	int choice;
	while( ( choice = ::menu_list( ) ) != 0 ){
		Rectangle rect;
		Circle c;
		switch( choice ){
		case 1:
			rect.acceptRecord( );
			rect.calculateArea( );
			rect.printRecord( );
			break;
		case 2:
			c.acceptRecord( );
			c.calculateArea( );
			c.printRecord( );
			break;
		}
	}
	return 0;
}

